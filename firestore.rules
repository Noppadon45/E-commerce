rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules

    function isAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    match /products/{productId} {
      allow read: if (request.auth != null && isAdmin()) || (resource.data.status == 'open');
      allow write: if (request.auth != null && isAdmin()) || (resource.data.status == 'open');
    }

    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 5, 28);
    }
  }
}